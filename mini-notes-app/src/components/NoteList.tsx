// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç NoteList –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–º/–Ω–µ–∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–º.
// –ó–¥–µ—Å—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è zustand store –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–º–µ—Ç–æ–∫.
// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ filter.
import { useState } from 'react'
import { useNoteStore } from '../store/noteStore'
import NoteCard from './NoteCard'

const NoteList = () => {
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏ –∏–∑ zustand store
  const notes = useNoteStore((state) => state.notes)
  // –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ (all, pinned, unpinned)
  const [filter, setFilter] = useState<'all' | 'pinned' | 'unpinned'>('all')

  // –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–º–µ—Ç–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞
  const filteredNotes = notes.filter((note) => {
    if (filter === 'all') return true
    if (filter === 'pinned') return note.pinned
    if (filter === 'unpinned') return !note.pinned
  })

  return (
    <div className="flex flex-col gap-4">
      {/* –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–∞ */}
      <div className="flex gap-2 mb-2">
        <button
          onClick={() => setFilter('all')}
          className={`px-3 py-1 rounded text-sm ${
            filter === 'all'
              ? 'bg-blue-500 text-white'
              : 'bg-gray-200 text-gray-800'
          }`}
        >
          All
        </button>
        <button
          onClick={() => setFilter('pinned')}
          className={`px-3 py-1 rounded text-sm ${
            filter === 'pinned'
              ? 'bg-blue-500 text-white'
              : 'bg-gray-200 text-gray-800'
          }`}
        >
          üìå Pinned
        </button>
        <button
          onClick={() => setFilter('unpinned')}
          className={`px-3 py-1 rounded text-sm ${
            filter === 'unpinned'
              ? 'bg-blue-500 text-white'
              : 'bg-gray-200 text-gray-800'
          }`}
        >
          Unpinned
        </button>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –∑–∞–º–µ—Ç–æ–∫ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ñ–∏–ª—å—Ç—Ä—É */}
      {filteredNotes.length === 0 ? (
        <p className="text-sm text-gray-500">No notes found for selected filter.</p>
      ) : (
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
          {filteredNotes.map((note) => (
            // –î–ª—è –∫–∞–∂–¥–æ–π –∑–∞–º–µ—Ç–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É
            <NoteCard key={note.id} note={note} />
          ))}
        </div>
      )}
    </div>
  )
}

export default NoteList
